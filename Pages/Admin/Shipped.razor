@page "/admin/shipped"
@inherits OwningComponentBase<ICheckOutRepository>

<ShippedTable TableTitle="UnShipped Purchases" CheckOuts="UnShippedPurchases"
              ButtonLabel="Shipped" PurchaseSelected="ShipPurchase"></ShippedTable>

<ShippedTable TableTitle="Shipped Purchases" CheckOuts="ShippedPurchases"
              ButtonLabel="Reset" PurchaseSelected="ResetPurchase"></ShippedTable>

<button class="btn btn-info" @onclick="@(x => UpdateData())">Refresh Data</button>

@code {

    ICheckOutRepository repo => Service;
    public IEnumerable<Models.CheckOut> BookData { get; set; }


    public IEnumerable<CheckOut> AllPurchases { get; set; }
    public IEnumerable<CheckOut> UnShippedPurchases { get; set; }
    public IEnumerable<CheckOut> ShippedPurchases { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await UpdateData();
    }

    public async Task UpdateData()
    {
        AllPurchases = await repo.CheckOut.ToListAsync();
        UnShippedPurchases = AllPurchases.Where(x => !x.Shipped);
        ShippedPurchases = AllPurchases.Where(x => x.Shipped);


    }

    public void ShipPurchase(int id) => UpdatePurchase(id, true);
    public void ResetPurchase(int id) => UpdatePurchase(id, false);

    private void UpdatePurchase (int id, bool shipped)
    {
        CheckOut s = repo.CheckOut.FirstOrDefault(x => x.CheckOutId == id);
        s.Shipped = shipped;
        repo.SaveCheckOut(s);
    }
}